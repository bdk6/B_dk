MEMORY REFERENCE
Load Via N              LDN     0N      M(R(N)) -> D; FOR N not 0
Load Advance            LDA     4N      M(R(N)) -> D; R(N) + 1 -> R(N)
Load Via X              LDX     F0      M(R(X)) -> D
Load Via X and Advance  LDXA    72      M(R(X)) -> D; R(X) + 1 -> R(X)
Load Immediate          LDI     F8      M(R(P)) -> D; R(P) + 1 -> R(P)
Store Via N             STR     5N      D->M(R(N))
Store Via X and Decr    STXD    73      D->M(R(X)); R(X)-1 -> R(X)

REGISTER_OPERATION
Increment Reg N         INC     1N      R(N) + 1 -> R(N)
Decrement Reg N         DEC     2N      R(N) - 1 -> R(N)
Increment Reg X         IRX     60      R(X) + 1 -> R(X)
Get Low Reg N           GLO     8N      R(N).0 -> D
Put Low Reg N           PLO     AN      D -> R(N).0
Get High Reg N          GHI     9N      R(N).1 -> D
Put High Reg N          PHI     BN      D -> R(N).1

LOGIC OPERATIONS
OR                      OR      F1      M(R(X)) OR D -> D
OR Immediate            ORI     F9      M(R(P)) OR D -> D; R(P) + 1 -> R(P)
Exclusive OR            XOR     F3      M(R(X)) XOR D -> D
Exclusive OR Immediate  XRI     FB      MOR(P)) XOR D -> D; R(P)+1 -> R(P)
AND                     AND     F2      M(R(X)) AND D -> D
AND Immediate           ANI     FA      M(R(P)) AND D -> D; R(P)+1 -> R(P)
Shift Right             SHR     F6      D>>=1; D0 -> DF; 0 -> D7
Shift Right w Carry     SHRC    76(2)   D>>=1; D0 -> DF; DF -> D7
Ring Shift Right        RSHR    76(2)   D>>=1; D0 -> DF; DF -> D7
Shift Left              SHL     FE      D<<=1; D7 -> DF; 0 -> D0
Shift Left w Carry      SHLC    7E(2)   D<<=1; D7 -> DF; DF -> D0
Ring Shift Left         RSHL    7E(2)   D<<=1; D7 -> DF; DF -> D0

ARITHMETIC OPERATION (1)
ADD                     ADD     F4      M(R(X)) + D ->DF,D
ADD Immediate           ADI     FC      M(R(P)) + D -> DF,D; R(P)+1 -> R(P)
ADD w/ Carry            ADC     74      M(R(X)) + D +DF->DF,D;
ADD w/Carry Immediate   ADCI    7C      M(R(P))+D+DF->DF,D;r(P)+1 -> R(P)
SUBTRACT D              SD      F5      M(R(X)) - D -> DF, D
SUBTRACT D Immediate    SDI     FD      M(R(P))-D ->DF,D;R(P)+1 -> R(P)
SUBTRACT D w/Borrow     SDB     75      M(R(X))-D-(NOT DF) -> DF,D
SUBTRACT D w/B Immed    SDBI    7D      M(R(P))-D-(!DF) -> DF,D;R(P)+1->R(P)
SUBTRACT Memory         SM      F7      D-M(R(X)) -> DF,D
SUBTRACT Mem Immed      SMI     FF      D-M(R(P)) -> DF,D;R(P)+1 -> R(P)
SUBTRACT Mem w/Borrow   SMB     77      D-M(R(X))-(!DF) -> DF,D
SUBTRACT Mem w/B Immed  SMBI    7F      D-M(R(P))-(!DF) -> DF,D;R(P)+1->R(P)

BRANCH INSTRUCTIONS - SHORT BRANCH
Short Branch            BR      30      M(R(P)) _> R(P).0
No Short Branch         NBR     38(2)   R(P)+1 -> R(P)
Short BR if D = 0       BZ      32      D=0 M(R(P))->R(P).0 : R(P)+1->R(P)
SHORT BR If D Not 0     BNZ     3A      D!=0:M(R(P))->R(P).0 :R(P)+1->R(P)
Short BR if DF = 1      BDF     33(2)   DF=1?M(R(P))->R(P).0 :R(P)+1->R(P)
Short BR if POS or 0    BPZ     33(2)
Short BR if == or >     BGE     33(2)
Short BR if DF = 1      BNF     3B(2)   DF=0?M(R(P)) ->R(P).0 : R(P)+1 ->R(P)
Short BR if minus       BM      3B(2)
Short BR if Less        BL      3B(2)
Short BR if Q = 1       BQ      31      Q=1?M(R(P)) -> R(P).0:R(P)+1->R(P)
Short BR if Q = 0       BNQ     39      Q=0?M(R(P)) ->R(P).0:R(P)+1->R(P)
Short BR if EF1=1       B1      34
Short BR if EF1 = 0     BN1     3C      EF1=0?M(R(P))->R(P).0:R(P)+1->R(P)
Short BR if EF2 = 1     B2      35
Short BR if EF2 = 0     BN2     3D
Short BR if EF3 = 1     B3      36
Short BR if EF3 = 0     BN3     3E
Short BR if EF4 = 1     B4      37
Short BR if EF4 = 0     BN4     3F

BRANCH INSTRUCTIONS - LONG BRANCH
Long BR                 LBR     C0      M(R(P)) ->R(P).1,M(R(P)+1) -> R(P).0
No Long BR (See LSKP)   NLBR    C8(2)   R(P)+2 -> R(P)
Long BR if D=0          LBZ     C2
Long BR if D != 0       LBNZ    CA
Long BR if DF = 1       LBDF    C3
Long BR if DF = 0       LBNF    CB
Long BR if Q = 1        LBQ     C1
Long BR if Q = 0        LBNQ    C9

SKIP INSTRUCTIONS
Short Skip              SKP     38(2)
Long Skip               LSKP    C8(2)
Long Skip if D = 0      LSZ     CE
Long Skip if D != 0     LSNZ    C6
Long Skip if DF = 1     LSDF    CF
Long Skip if DF = 0     LSNF    C7
Long Skip if Q = 1      LSQ     CD
Long Skip if Q = 0      LSNQ    C5
Long Skip if IE = 1     LSIE    CC

CONTROL INSTRUCTIONS
IDLE                    IDL     00(3)   Wait for DMA or INT: M(R(0)) -> BUS
No Operation            NOP     C4      Continue
SET P                   SEP     DN      N -> P
SET X                   SEX     EN      N -> X
SET Q                   SEQ     7B      1 -> Q
RESET Q                 REQ     7A      0 -> Q
SAVE                    SAV     78      T -> M(R(X))
PUSH X,P to Stack       MARK    79      (X,P)->T;(X,P)->M(R(2)) ...
RETURN                  RET     70      M(R(X))->(X,P);R(X)+1->R(X),1->IE
DISABLE                 DIS     71

INPUT-OUTPUT BYTE TRANSFER
OUTPUT 1                OUT1    61      M(R(X))->BUS;R(X)+1->R(X);NL = 1
OUTPUT 2                OUT2    62
OUTPUT 3                OUT3    63
OUTPUT 4                OUT4    64
OUTPUT 5                OUT5    65
OUTPUT 6                OUT6    66
OUTPUT 7                OUT7    67
INPUT 1                 INP1    69      BUS->M(R(X));BUS->D;NL = 1
INPUT 2                 INP2    6A
INPUT 3                 INP3    6B
INPUT 4                 INP4    6C
INPUT 5                 INP5    6D
INPUT 6                 INP6    6E
INPUT 7                 INP7    6F

